name: Build and deploy Python app to Azure Web App - InterviewMate

on:
  push:
    branches:
      - apibranch
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'
  APP_NAME: 'InterviewMate'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Zip artifact for deployment
        run: zip -r release.zip .

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          mkdir app
          mv * app/ || true
          cd app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5DF0714E93954EF4B0A77A75DFB1EF48 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B187656150C84D549BC4E1445C91EE98 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7D94DC64223541FEA49237FF5A201C3A }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'

      - name: Log deployment result
        if: always()
        run: |
          if [ "${{ steps.deploy-to-webapp.outcome }}" == "success" ]; then
            echo "Deployment successful"
          else
            echo "Deployment failed"
            exit 1
          fi